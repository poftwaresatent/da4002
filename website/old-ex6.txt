<h1>ITADS exercise 6<br />heaps and priority queues</h1>
<h2><strong>Under construction! This is still last year's version and might change...</strong></h2>
<p><strong>to do: explain how this can be used for priority queues</strong></p>
<p>Download <a href="itads2012/ex6/intheap.c">intheap.c</a> (a partial implementation of a max heap th\ at stores integers) and fill in the two missing functions:</p>
<ol>
<li><tt>bubble_up</tt> is responsible for restoring the heap property after a new number has been appended to the end of the heap.</li>
<li><tt>bubble_down</tt> is responsible for restoring the heap property after the maximum number has been extracted from the root of the heap, and the last number has been placed onto the root.</li>
</ol>
<p>You can check whether your implementation is correct by running the program and giving it a list of number to put on the heap. For example, to insert the sequence "1 3 5 2 4 6" you would run:</p>
<pre class="command">./intheap 1 3 5 2 4 6</pre>
<p>...and the output should be:</p>
<pre class="command">inserted 1
   1
inserted 3
   3 1
inserted 5
   5 1 3
inserted 2
   5 2 3 1
inserted 4
   5 4 3 1 2
inserted 6
   6 4 5 1 2 3
--------------------------------------------------
extracted 6
   5 4 3 1 2
extracted 5
   4 2 3 1
extracted 4
   3 2 1
extracted 3
   2 1
extracted 2
   1
extracted 1</pre>
<h3>solution 6: <a href="itads2012/ex6/isin8Kie/intheap-solution.c">intheap-solution.c</a></h3>